// This file is automatically generated by JSDoc; regenerate it with ../build_doc.sh
DocsData = {
  "Drivers": {
    "instancename": "collection",
    "kind": "class",
    "locus": "Anywhere",
    "longname": "Drivers",
    "name": "Drivers",
    "options": [
      {
        "description": "<p>The server connection that will manage this collection. Uses the default connection if not specified.  Pass the return value of calling <a href=\"#ddp_connect\"><code>DDP.connect</code></a> to specify a different server. Pass <code>null</code> to specify no connection. Unmanaged (<code>name</code> is null) collections cannot specify a connection.</p>",
        "name": "connection",
        "type": {
          "names": [
            "Object"
          ]
        }
      },
      {
        "description": "<p>The method of generating the <code>_id</code> fields of new documents in this collection.  Possible values:</p>\n<ul>\n<li><strong><code>'STRING'</code></strong>: random strings</li>\n<li><strong><code>'MONGO'</code></strong>:  random <a href=\"#mongo_object_id\"><code>Mongo.ObjectID</code></a> values\nThe default id generation technique is <code>'STRING'</code>.</li>\n</ul>",
        "name": "idGeneration",
        "type": {
          "names": [
            "String"
          ]
        }
      },
      {
        "description": "<p>An optional transformation function. Documents will be passed through this function before being returned from <code>fetch</code> or <code>findOne</code>, and before being passed to callbacks of <code>observe</code>, <code>map</code>, <code>forEach</code>, <code>allow</code>, and <code>deny</code>. Transforms are <em>not</em> applied for the callbacks of <code>observeChanges</code> or to cursors returned from publish functions.</p>",
        "name": "transform",
        "type": {
          "names": [
            "function"
          ]
        }
      }
    ],
    "params": [
      {
        "description": "<p>The name of the collection.  If null, creates an unmanaged (unsynchronized) local collection.</p>",
        "name": "myname",
        "type": {
          "names": [
            "String"
          ]
        }
      },
      {
        "name": "options",
        "optional": true,
        "type": {
          "names": [
            "Object"
          ]
        }
      }
    ],
    "scope": "global",
    "summary": "Constructor for a Collection"
  },
  "Groups": {
    "instancename": "collection",
    "kind": "class",
    "locus": "Anywhere",
    "longname": "Groups",
    "name": "Groups",
    "options": [
      {
        "description": "<p>The server connection that will manage this collection. Uses the default connection if not specified.  Pass the return value of calling <a href=\"#ddp_connect\"><code>DDP.connect</code></a> to specify a different server. Pass <code>null</code> to specify no connection. Unmanaged (<code>name</code> is null) collections cannot specify a connection.</p>",
        "name": "connection",
        "type": {
          "names": [
            "Object"
          ]
        }
      },
      {
        "description": "<p>The method of generating the <code>_id</code> fields of new documents in this collection.  Possible values:</p>\n<ul>\n<li><strong><code>'STRING'</code></strong>: random strings</li>\n<li><strong><code>'MONGO'</code></strong>:  random <a href=\"#mongo_object_id\"><code>Mongo.ObjectID</code></a> values\nThe default id generation technique is <code>'STRING'</code>.</li>\n</ul>",
        "name": "idGeneration",
        "type": {
          "names": [
            "String"
          ]
        }
      },
      {
        "description": "<p>An optional transformation function. Documents will be passed through this function before being returned from <code>fetch</code> or <code>findOne</code>, and before being passed to callbacks of <code>observe</code>, <code>map</code>, <code>forEach</code>, <code>allow</code>, and <code>deny</code>. Transforms are <em>not</em> applied for the callbacks of <code>observeChanges</code> or to cursors returned from publish functions.</p>",
        "name": "transform",
        "type": {
          "names": [
            "function"
          ]
        }
      }
    ],
    "params": [
      {
        "description": "<p>The name of the collection.  If null, creates an unmanaged (unsynchronized) local collection.</p>",
        "name": "name",
        "type": {
          "names": [
            "String"
          ]
        }
      },
      {
        "name": "options",
        "optional": true,
        "type": {
          "names": [
            "Object"
          ]
        }
      }
    ],
    "scope": "global",
    "summary": "Constructor for a Collection"
  },
  "Meteor.methods#changeAdmin": {
    "kind": "function",
    "locus": "Server",
    "longname": "Meteor.methods#changeAdmin",
    "memberof": "Meteor.methods",
    "name": "changeAdmin",
    "options": [],
    "params": [
      {
        "name": "newAdmin",
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "none"
          ]
        }
      }
    ],
    "scope": "instance",
    "summary": "This is a description of the changeAdmin function."
  },
  "Meteor.methods#createNewUser": {
    "kind": "function",
    "locus": "Server",
    "longname": "Meteor.methods#createNewUser",
    "memberof": "Meteor.methods",
    "name": "createNewUser",
    "options": [],
    "params": [
      {
        "description": "<p>A string of user's email</p>",
        "name": "email",
        "type": {
          "names": [
            "String"
          ]
        }
      },
      {
        "description": "<p>The name of the user</p>",
        "name": "name",
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "password"
          ]
        }
      }
    ],
    "scope": "instance",
    "summary": "This is a description of the createNewUser function."
  },
  "Meteor.methods#createUserAccount": {
    "kind": "function",
    "locus": "Server",
    "longname": "Meteor.methods#createUserAccount",
    "memberof": "Meteor.methods",
    "name": "createUserAccount",
    "options": [
      {
        "name": "username",
        "type": {
          "names": [
            "String"
          ]
        }
      },
      {
        "name": "email",
        "type": {
          "names": [
            "String"
          ]
        }
      },
      {
        "name": "password",
        "type": {
          "names": [
            "String"
          ]
        }
      },
      {
        "name": "profile",
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "params": [
      {
        "name": "options",
        "type": {
          "names": [
            "Object"
          ]
        }
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "userOptions"
          ]
        }
      }
    ],
    "scope": "instance",
    "summary": "This is a description of the createUserAccount function."
  },
  "Meteor.methods#joinGroup": {
    "kind": "function",
    "locus": "Server",
    "longname": "Meteor.methods#joinGroup",
    "memberof": "Meteor.methods",
    "name": "joinGroup",
    "options": [],
    "params": [
      {
        "name": "groupName",
        "type": {
          "names": [
            "String"
          ]
        }
      },
      {
        "name": "groupKey",
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "group.id"
          ]
        }
      }
    ],
    "scope": "instance",
    "summary": "This is a description of the joinGroup function."
  },
  "Meteor.methods#removeMember": {
    "kind": "function",
    "locus": "Server",
    "longname": "Meteor.methods#removeMember",
    "memberof": "Meteor.methods",
    "name": "removeMember",
    "options": [],
    "params": [
      {
        "name": "memberToRemove",
        "type": {
          "names": [
            "String"
          ]
        }
      },
      {
        "name": "group",
        "type": {
          "names": [
            "Object"
          ]
        }
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "group.id"
          ]
        }
      }
    ],
    "scope": "instance",
    "summary": "This is a description of the removeMember function."
  },
  "Meteor.methods#sendMail": {
    "kind": "function",
    "locus": "Server",
    "longname": "Meteor.methods#sendMail",
    "memberof": "Meteor.methods",
    "name": "sendMail",
    "options": [
      {
        "name": "username",
        "type": {
          "names": [
            "String"
          ]
        }
      },
      {
        "name": "email",
        "type": {
          "names": [
            "String"
          ]
        }
      },
      {
        "name": "password",
        "type": {
          "names": [
            "String"
          ]
        }
      },
      {
        "name": "profile",
        "type": {
          "names": [
            "String"
          ]
        }
      },
      {
        "name": "roles",
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "params": [
      {
        "name": "options",
        "type": {
          "names": [
            "Object"
          ]
        }
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "none"
          ]
        }
      }
    ],
    "scope": "instance",
    "summary": "This is a description of the sendMail function."
  },
  "Meteor.methods#updateUserAccount": {
    "kind": "function",
    "locus": "Server",
    "longname": "Meteor.methods#updateUserAccount",
    "memberof": "Meteor.methods",
    "name": "updateUserAccount",
    "options": [
      {
        "name": "username",
        "type": {
          "names": [
            "String"
          ]
        }
      },
      {
        "name": "email",
        "type": {
          "names": [
            "String"
          ]
        }
      },
      {
        "name": "password",
        "type": {
          "names": [
            "String"
          ]
        }
      },
      {
        "name": "profile",
        "type": {
          "names": [
            "String"
          ]
        }
      },
      {
        "name": "roles",
        "type": {
          "names": [
            "String"
          ]
        }
      }
    ],
    "params": [
      {
        "name": "options",
        "type": {
          "names": [
            "Object"
          ]
        }
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "none"
          ]
        }
      }
    ],
    "scope": "instance",
    "summary": "This is a description of the updateUserAccount function."
  },
  "Mongo.Collectionaa#findaa": {
    "kind": "function",
    "locus": "Anywhere",
    "longname": "Mongo.Collectionaa#findaa",
    "memberof": "Mongo.Collectionaa",
    "name": "findaa",
    "options": [
      {
        "description": "<p>Sort order (default: natural order)</p>",
        "name": "sort",
        "type": {
          "names": [
            "MongoSortSpecifier"
          ]
        }
      },
      {
        "description": "<p>Number of results to skip at the beginning</p>",
        "name": "skip",
        "type": {
          "names": [
            "Number"
          ]
        }
      },
      {
        "description": "<p>Maximum number of results to return</p>",
        "name": "limit",
        "type": {
          "names": [
            "Number"
          ]
        }
      },
      {
        "description": "<p>Dictionary of fields to return or exclude.</p>",
        "name": "fields",
        "type": {
          "names": [
            "MongoFieldSpecifier"
          ]
        }
      },
      {
        "description": "<p>(Client only) Default <code>true</code>; pass <code>false</code> to disable reactivity</p>",
        "name": "reactive",
        "type": {
          "names": [
            "Boolean"
          ]
        }
      },
      {
        "description": "<p>Overrides <code>transform</code> on the  <a href=\"#collections\"><code>Collection</code></a> for this cursor.  Pass <code>null</code> to disable transformation.</p>",
        "name": "transform",
        "type": {
          "names": [
            "function"
          ]
        }
      }
    ],
    "params": [
      {
        "description": "<p>A query describing the documents to find</p>",
        "name": "selector",
        "optional": true,
        "type": {
          "names": [
            "MongoSelector"
          ]
        }
      },
      {
        "name": "options",
        "optional": true,
        "type": {
          "names": [
            "Object"
          ]
        }
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Mongo.Cursor"
          ]
        }
      }
    ],
    "scope": "instance",
    "summary": "Findee the documents in a collection that match the selector."
  }
};